name: Release
on:
  push:
    branches: [ master ]

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.RELEASER_APP }}
          private_key: ${{ secrets.RELEASER_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup | Force release branch to be at workflow sha
        run: |
          git reset --hard ${{ github.sha }}

      - name: Evaluate | Verify upstream has NOT changed
        # Last chance to abort before causing an error as another PR/push was applied to
        # the upstream branch while this workflow was running. This is important
        # because we are committing a version change (--commit). You may omit this step
        # if you have 'commit: false' in your configuration.
        #
        # You may consider moving this to a repo script and call it from this step instead
        # of writing it in-line.
        shell: bash
        run: |
          set +o pipefail
          
          UPSTREAM_BRANCH_NAME="$(git status -sb | head -n 1 | cut -d' ' -f2 | grep -E '\.{3}' | cut -d'.' -f4)"
          printf '%s\n' "Upstream branch name: $UPSTREAM_BRANCH_NAME"
          
          set -o pipefail
          
          if [ -z "$UPSTREAM_BRANCH_NAME" ]; then
              printf >&2 '%s\n' "::error::Unable to determine upstream branch name!"
              exit 1
          fi
          
          git fetch "${UPSTREAM_BRANCH_NAME%%/*}"
          
          if ! UPSTREAM_SHA="$(git rev-parse "$UPSTREAM_BRANCH_NAME")"; then
              printf >&2 '%s\n' "::error::Unable to determine upstream branch sha!"
              exit 1
          fi
          
          HEAD_SHA="$(git rev-parse HEAD)"
          
          if [ "$HEAD_SHA" != "$UPSTREAM_SHA" ]; then
              printf >&2 '%s\n' "[HEAD SHA] $HEAD_SHA != $UPSTREAM_SHA [UPSTREAM SHA]"
              printf >&2 '%s\n' "::error::Upstream has changed, aborting release..."
              exit 1
          fi
          
          printf '%s\n' "Verified upstream branch has not changed, continuing with release..."

      - name: Prepare release
        id: prepare-release
        uses: python-semantic-release/python-semantic-release@v9.21.1
        env:
            GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          tag: true

      - name: Release to GitHub
        id: release
        uses: python-semantic-release/publish-action@v9.21.1
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          tag: ${{ steps.prepare-release.outputs.tag }}

      - name: Publish | Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.prepare-release.outputs.released == 'true'